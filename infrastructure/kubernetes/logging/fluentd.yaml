apiVersion: v1
kind: List
items:
# ServiceAccount for Fluentd
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: fluentd
    namespace: videocoach-monitoring
    labels:
      app: fluentd
      component: logging
      part-of: videocoach-platform

# ClusterRole for Fluentd permissions
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: fluentd
    labels:
      app: fluentd
      component: logging
      part-of: videocoach-platform
  rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces", "nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["daemonsets"]
    verbs: ["get", "list", "watch"]

# ClusterRoleBinding to bind ServiceAccount to ClusterRole
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: fluentd
    labels:
      app: fluentd
      component: logging
      part-of: videocoach-platform
  subjects:
  - kind: ServiceAccount
    name: fluentd
    namespace: videocoach-monitoring
  roleRef:
    kind: ClusterRole
    name: fluentd
    apiGroup: rbac.authorization.k8s.io

# ConfigMap for Fluentd configuration
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: fluentd-config
    namespace: videocoach-monitoring
    labels:
      app: fluentd
      component: logging
      part-of: videocoach-platform
  data:
    fluent.conf: |
      # Enhanced Fluentd configuration with improved reliability and performance
      @include kubernetes.conf

      <system>
        log_level info
        workers 4
      </system>

      <match **>
        @type elasticsearch
        host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
        port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
        scheme https
        ssl_verify true
        ssl_version TLSv1_2
        logstash_format true
        logstash_prefix videocoach
        include_tag_key true
        type_name access_log
        tag_key @log_name
        
        <buffer>
          @type file
          path /var/log/fluentd-buffers/kubernetes.system.buffer
          flush_mode interval
          retry_type exponential_backoff
          flush_thread_count 8
          flush_interval 5s
          retry_forever false
          retry_max_interval 30
          chunk_limit_size 8M
          queue_limit_length 32
          overflow_action block
        </buffer>
      </match>

# DaemonSet for Fluentd
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    name: fluentd
    namespace: videocoach-monitoring
    labels:
      app: fluentd
      component: logging
      part-of: videocoach-platform
  spec:
    selector:
      matchLabels:
        app: fluentd
        component: logging
    template:
      metadata:
        labels:
          app: fluentd
          component: logging
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "24231"
      spec:
        serviceAccountName: fluentd
        priorityClassName: system-node-critical
        terminationGracePeriodSeconds: 30
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: NotIn
                  values: ["true"]
        tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: node.kubernetes.io/not-ready
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 30
        containers:
        - name: fluentd
          image: fluent/fluentd-kubernetes-daemonset:v1.16-debian-elasticsearch7-1
          env:
          - name: FLUENT_ELASTICSEARCH_HOST
            value: elasticsearch.videocoach-monitoring
          - name: FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "https"
          - name: FLUENTD_SYSTEMD_CONF
            value: "disable"
          - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
            value: "true"
          - name: FLUENT_ELASTICSEARCH_SSL_VERSION
            value: "TLSv1_2"
          resources:
            limits:
              memory: 1Gi
              cpu: 1000m
            requests:
              memory: 512Mi
              cpu: 500m
          volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: config
            mountPath: /fluentd/etc
          - name: systemd
            mountPath: /run/systemd/journal
            readOnly: true
          livenessProbe:
            httpGet:
              path: /metrics
              port: 24231
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /metrics
              port: 24231
            initialDelaySeconds: 5
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "kill -SIGTERM $(pgrep -f fluentd) && sleep 10"]
          securityContext:
            runAsUser: 0
            privileged: true
        volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: config
          configMap:
            name: fluentd-config
        - name: systemd
          hostPath:
            path: /run/systemd/journal