apiVersion: v1
kind: List
items:
# ServiceAccount for NGINX ingress controller
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ingress-nginx
    namespace: videocoach-system
    labels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: videocoach-platform

# ConfigMap for NGINX configuration
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ingress-nginx-controller
    namespace: videocoach-system
  data:
    # Performance tuning
    use-proxy-protocol: "true"
    enable-real-ip: "true"
    proxy-body-size: "100m"
    proxy-connect-timeout: "15"
    proxy-read-timeout: "180"
    proxy-send-timeout: "180"
    worker-processes: "auto"
    keep-alive: "75"
    keep-alive-requests: "1000"
    
    # SSL/TLS configuration
    ssl-protocols: "TLSv1.3"
    ssl-ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305"
    ssl-session-tickets: "false"
    enable-ocsp: "true"
    
    # Security headers
    hsts: "true"
    hsts-include-subdomains: "true"
    hsts-max-age: "63072000"
    hsts-preload: "true"
    
    # WAF configuration
    enable-modsecurity: "true"
    enable-owasp-core-rules: "true"

# Deployment for NGINX ingress controller
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ingress-nginx-controller
    namespace: videocoach-system
  spec:
    replicas: 3
    selector:
      matchLabels:
        app.kubernetes.io/name: ingress-nginx
    template:
      metadata:
        labels:
          app.kubernetes.io/name: ingress-nginx
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "10254"
      spec:
        serviceAccountName: ingress-nginx
        securityContext:
          runAsUser: 101
          runAsGroup: 101
          fsGroup: 101
        containers:
        - name: controller
          image: k8s.gcr.io/ingress-nginx/controller:v1.8.0
          args:
          - /nginx-ingress-controller
          - --publish-service=videocoach-system/ingress-nginx-controller
          - --election-id=ingress-controller-leader
          - --controller-class=k8s.io/ingress-nginx
          - --configmap=videocoach-system/ingress-nginx-controller
          - --enable-ssl-passthrough
          - --default-ssl-certificate=videocoach-system/tls-secret
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          - name: metrics
            containerPort: 10254
          resources:
            requests:
              cpu: "1"
              memory: "1Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
            initialDelaySeconds: 10
            periodSeconds: 10
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - ingress-nginx
                topologyKey: kubernetes.io/hostname

# Service for NGINX ingress controller
- apiVersion: v1
  kind: Service
  metadata:
    name: ingress-nginx-controller
    namespace: videocoach-system
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "${AWS_CERT_ARN}"
      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
      service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
      service.beta.kubernetes.io/aws-load-balancer-attributes: "access_logs.s3.enabled=true,access_logs.s3.bucket=videocoach-lb-logs"
      service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "Environment=${ENV},Project=VideoCoach"
  spec:
    type: LoadBalancer
    externalTrafficPolicy: Local
    ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 443
      targetPort: https
      protocol: TCP
    selector:
      app.kubernetes.io/name: ingress-nginx