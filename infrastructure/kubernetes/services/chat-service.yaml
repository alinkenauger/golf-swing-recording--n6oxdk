apiVersion: v1
kind: List
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: chat-service
    namespace: videocoach-system
    labels:
      app: chat-service
      component: backend
      part-of: video-coaching-platform
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '3000'
      prometheus.io/path: '/metrics'
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: chat-service
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        labels:
          app: chat-service
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - chat-service
                topologyKey: kubernetes.io/hostname
        containers:
        - name: chat-service
          image: videocoach/chat-service:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 3000
            name: http
          - containerPort: 3001
            name: websocket
          - containerPort: 9090
            name: metrics
          env:
          - name: NODE_ENV
            value: production
          - name: MONGODB_URI
            valueFrom:
              secretKeyRef:
                name: chat-service-secrets
                key: mongodb-uri
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: chat-service-secrets
                key: jwt-secret
          - name: REDIS_URL
            valueFrom:
              secretKeyRef:
                name: chat-service-secrets
                key: redis-url
          resources:
            requests:
              cpu: '250m'
              memory: '512Mi'
              ephemeral-storage: '1Gi'
            limits:
              cpu: '500m'
              memory: '1.5Gi'
              ephemeral-storage: '2Gi'
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /startup
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
        terminationGracePeriodSeconds: 60

- apiVersion: v1
  kind: Service
  metadata:
    name: chat-service
    namespace: videocoach-system
    labels:
      app: chat-service
      component: backend
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: 'nlb'
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
  spec:
    type: ClusterIP
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 443
      targetPort: websocket
      protocol: TCP
      name: websocket
    selector:
      app: chat-service

- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    name: chat-service-hpa
    namespace: videocoach-system
  spec:
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: chat-service
    minReplicas: 3
    maxReplicas: 10
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: websocket_connections_per_pod
        target:
          type: AverageValue
          averageValue: '1000'
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 60
        policies:
        - type: Pods
          value: 2
          periodSeconds: 60
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
        - type: Pods
          value: 1
          periodSeconds: 120

- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    name: chat-service-pdb
    namespace: videocoach-system
  spec:
    minAvailable: '50%'
    selector:
      matchLabels:
        app: chat-service

- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: chat-service-network-policy
    namespace: videocoach-system
  spec:
    podSelector:
      matchLabels:
        app: chat-service
    policyTypes:
    - Ingress
    - Egress
    ingress:
    - ports:
      - port: 3000
        protocol: TCP
      - port: 3001
        protocol: TCP
    egress:
    - to:
      - namespaceSelector:
          matchLabels:
            name: videocoach-system