apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: user-service
    namespace: videocoach-system
    labels:
      app: user-service
      component: backend
      team: auth
      part-of: video-coaching-platform
      version: 1.0.0
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "3001"
      prometheus.io/path: "/metrics"
      description: "User management and authentication service"
  spec:
    type: ClusterIP
    ports:
    - port: 3001
      targetPort: 3001
      protocol: TCP
      name: http
    selector:
      app: user-service
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: user-service
    namespace: videocoach-system
    labels:
      app: user-service
      component: backend
      team: auth
      part-of: video-coaching-platform
      version: 1.0.0
      managed-by: kubectl
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "3001"
      prometheus.io/path: "/metrics"
      security.videocoach.io/compliance-level: "high"
  spec:
    replicas: 3
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    selector:
      matchLabels:
        app: user-service
    template:
      metadata:
        labels:
          app: user-service
          component: backend
          team: auth
          security-tier: restricted
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "3001"
          prometheus.io/path: "/metrics"
          checksum/config: "${CONFIG_CHECKSUM}"
          checksum/secret: "${SECRET_CHECKSUM}"
      spec:
        securityContext:
          runAsUser: 1000
          runAsGroup: 3000
          fsGroup: 2000
          runAsNonRoot: true
        containers:
        - name: user-service
          image: videocoach/user-service:latest
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
          ports:
          - containerPort: 3001
            protocol: TCP
            name: http
          env:
          - name: NODE_ENV
            value: "production"
          - name: PORT
            value: "3001"
          envFrom:
          - configMapRef:
              name: user-service-config
          - secretRef:
              name: user-service-secrets
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: user-service-secrets
            mountPath: /etc/secrets
            readOnly: true
        volumes:
        - name: tmp
          emptyDir: {}
        - name: user-service-secrets
          secret:
            secretName: user-service-secrets
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - user-service
                topologyKey: kubernetes.io/hostname
        topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: user-service

- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    name: user-service-hpa
    namespace: videocoach-system
    labels:
      app: user-service
      component: backend
  spec:
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: user-service
    minReplicas: 3
    maxReplicas: 10
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 60
        policies:
        - type: Pods
          value: 2
          periodSeconds: 60
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
        - type: Pods
          value: 1
          periodSeconds: 120